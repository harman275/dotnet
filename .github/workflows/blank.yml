name: .NET Build and Create Executable
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: List files for debugging
      run: ls -R
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' # specify the .NET version you need
        
    - name: Create self-signed certificate
      run: |
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout mycert.key -out mycert.crt -subj "/CN=localhost"
        openssl pkcs12 -export -out mycert.pfx -inkey mycert.key -in mycert.crt -passout pass:yourpassword
        
    - name: Restore dependencies
      run: dotnet restore MySolution.sln
      
    - name: Build
      run: dotnet build MySolution.sln --configuration Release --output ./output
      
    - name: Publish
      run: dotnet publish MyProject.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o ./publish
      
    - name: Rename output to exe
      run: mv ./publish/MyProject ./publish/MyProject.exe
      
    - name: Archive build output
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: ./publish/MyProject.exe


    # - name: Generate private key and self-signed certificate
    #   run: |
    #     openssl req -newkey rsa:2048 -nodes -keyout private.key -x509 -days 90 -out code_signing.crt -subj "/C=US/ST=State/L=City/O=Organization/OU=Unit/CN=yourdomain.com"

    # - name: Create PKCS#12 keystore
    #   run: |
    #     openssl pkcs12 -export -in code_signing.crt -inkey private.key -out code_signing.p12 -name code_signing -passout pass:yourpassphrase
    #     openssl pkcs12 -info -in code_signing.p12 -noout -passin pass:yourpassphrase

    # - name: Convert PKCS#12 to PFX (Personal Information Exchange)
    #   run: |
    #     openssl pkcs12 -in code_signing.p12 -out code_signing.pfx -passin pass:yourpassphrase -passout pass:yourpassphrase
    #     openssl pkcs12 -info -in code_signing.pfx -noout -passin pass:yourpassphrase

    # - name: Sign executable with osslsigncode
    #   run: |
    #     osslsigncode sign -pkcs12 code_signing.pfx -pass yourpassphrase \
    #     -n "Your Application Name" -i "http://yourdomain.com" -t http://timestamp.digicert.com \
    #     -in out/yourapplication.exe -out out/yourapplication-signed.exe

    # - name: Verify signature
    #   run: osslsigncode verify -in out/yourapplication-signed.exe

    # - name: Upload signed executable
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: yourapplication-signed
    #     path: out/yourapplication-signed.exe
